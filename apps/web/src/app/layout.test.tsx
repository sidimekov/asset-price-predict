import { render } from "@testing-library/react"
import RootLayout, { metadata } from "./layout"
import {describe, expect, it, vi} from "vitest";
import {renderToStaticMarkup} from "react-dom/server";

vi.mock("next/font/google", () => ({
    Geist: () => ({ variable: "geist-sans-var", className: "geist-sans" }),
    Geist_Mono: () => ({ variable: "geist-mono-var", className: "geist-mono" }),
}))

vi.mock("./globals.css", () => ({}));

describe("RootLayout", () => {
    it("exports correct metadata", async () => {
        const { metadata } = await import("./layout")
        expect(metadata.title).toBe("Create Next App")
        expect(metadata.description).toBe("Generated by create next app")
    })

    it("renders <html lang='en'> and children", async () => {
        const { default: RootLayout } = await import("./layout")
        const html = renderToStaticMarkup(
            <RootLayout>
                <div data-testid="child">hello</div>
            </RootLayout>
        )

        expect(html).toMatch(/<html[^>]*lang="en"/)
        expect(html).toContain(">hello<")
    })

    it("puts font classes on <body>", async () => {
        const { default: RootLayout } = await import("./layout")
        const html = renderToStaticMarkup(
            <RootLayout>
                <div />
            </RootLayout>
        )

        expect(html).toMatch(/<body[^>]*class="[^"]*geist-sans-var[^"]*"/)
        expect(html).toMatch(/<body[^>]*class="[^"]*geist-mono-var[^"]*"/)
        expect(html).toMatch(/<body[^>]*class="[^"]*antialiased[^"]*"/)
    })
})
